#!/bin/bash
SCRIPT_NAME=`readlink $0`
if test -x "$SCRIPT_NAME";
then
    SCRIPT_DIRNAME=`dirname $SCRIPT_NAME`
else
    SCRIPT_DIRNAME=`dirname $0`
fi
SCRIPT_DIR=`(cd $SCRIPT_DIRNAME; pwd)`

source $SCRIPT_DIR/scripts/setup_raven_libs

# set up run keywords
# by default run in "opt" mode
MODE='opt'
# "ARGS" stores command line arguments not treated in this file (passed through)
ARGS=()
INPUT_FOUND=false
# loop through arguments and look for those that are handled before Python is called
for var in "$@"; do
  if [ "$var" = '-D' ]; then
    # run in development mode (assertions not stripped)
    MODE='dev'
  elif [ "$var" = 'help' ]; then
    # display "help" print
    MODE='help'
  else
    # collect command line args (basically, skipping the -D or -O ARG)
    ARGS+=("$var")
  fi
  # check if input file has been found
  # previous check was not safe since it was checking for the number of command line args,
  # but not the type of them (e.g. if the user ran "./raven_framework interfaceCheck" without
  # input file, the check was giving a false negative (i.e. no error message). Fixed by alfoa
  if  [[ $var == *xml ]] ;
  then
    INPUT_FOUND=true
  fi
done
# if there's no file to run after parsing arguments, run "help" after warning of the problem.
if [ "$INPUT_FOUND" = false ] ; then
  echo ''
  echo 'ERROR: No input file specified! See options below.'
  MODE='help'
fi
# run Driver.py based on the mode chosen
case $MODE in
  'opt' )
    echo 'Running RAVEN in "opt" mode.'
    python -O $SCRIPT_DIR/framework/Driver.py "${ARGS[@]}"
    ;;
  'dev' )
    echo 'Running RAVEN in "dev" mode.'
    python $SCRIPT_DIR/framework/Driver.py "${ARGS[@]}"
    ;;
  'help' )
    echo ''
    echo '  ------------------------------------------'
    echo '  Default usage:'
    echo '    raven_framework filename.xml'
    echo ''
    echo '  Description:'
    echo '      This will run RAVEN in "opt" mode using "filename.xml" as the input.  This should be'
    echo '      sufficient for the majority of RAVEN calculations.  For more options, see below.'
    echo '  ------------------------------------------'
    echo ''
    echo '  Advanced usage:'
    echo '    raven_framework [-D][interfaceCheck][interactive][interactiveCheck] filename'
    echo ''
    echo '  Description:'
    echo '    Runs RAVEN using the input file given by "filename".'
    echo ''
    echo '  Options:'
    echo '    -D'
    echo '      Development mode.  Turns Python "assert" statements on.'
    echo ''
    echo '    help'
    echo '      Shows this description and exits.'
    echo ''
    echo '    interfaceCheck'
    echo '      Do not attempt to run the model executable, but read from existing output files.'
    echo ''
    echo '    interactive'
    echo '      Run RAVEN in GUI mode if possible.'
    echo ''
    echo '    interactiveCheck'
    echo '      Run tests on interactive GUI.'
    echo ''
    ;;
  *)
    echo 'Unrecognized MODE "'${MODE}'" in raven_framework! Exiting ...'
esac

